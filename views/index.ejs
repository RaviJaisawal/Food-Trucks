<!DOCTYPE html>
<html>
  <head>
    <title>Place Autocomplete</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
     
      #map {
        height: 100%;
      }
     
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }

      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    
  </head>
  <body>
    <div class="pac-card" id="pac-card">
      <div>
        <div id="title">
          Autocomplete search
        </div>
        <div id="type-selector" class="pac-controls">
          <input type="radio" name="type" id="changetype-all" checked="checked">
          <label for="changetype-all">All</label>

          <input type="radio" name="type" id="changetype-establishment">
          <label for="changetype-establishment">Establishments</label>

          <input type="radio" name="type" id="changetype-address">
          <label for="changetype-address">Addresses</label>

          <input type="radio" name="type" id="changetype-geocode">
          <label for="changetype-geocode">Geocodes</label>
        </div>
        <div id="strict-bounds-selector" class="pac-controls">
          <input type="checkbox" id="use-strict-bounds" value="">
          <label for="use-strict-bounds">Strict Bounds</label>
        </div>
      </div>
      <div id="pac-container">
        <input id="pac-input" type="text"
            placeholder="Enter a location">
      </div>
    </div>
    <div id="map"></div>
    <div id="infowindow-content">
      <img src="" width="16" height="16" id="place-icon">
      <span id="place-name"  class="title"></span><br>
      <span id="place-address"></span>
    </div>

    <script type = "text/javascript" language = "javascript">
      
 
  
      
      
      function initMap() {
     
      function getData() {         
          return new Promise(function(resolve, reject) {          
            var req = new XMLHttpRequest();
            req.open('GET', 'https://data.sfgov.org/resource/6a9r-agq8.json');
            req.onload = function() {         
              if (req.status == 200) {               
                resolve(req.response);
              }
              else {              
                reject(Error(req.statusText));
              }
            };            
            req.onerror = function() {
              reject(Error("Network Error"));
            };           
            req.send();
          });
        }
       
       getData().then(function(response) {
                 getDataForLocation(response);
			    }, function(error) {
			      console.error("Failed!", error);
			    })

   
      
      }

      function getGoogleMap(locations){
        var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 10,
        center: new google.maps.LatLng(37.7425503735592, -122.492677082215),
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });

      var infowindow = new google.maps.InfoWindow();

      var marker, i;
      var location = JSON.stringify(locations)
      
      for (i = 0; i < locations.length; i++) {  
          console.log(locations[i].latitude, locations[i].longitude)
          marker = new google.maps.Marker({
            position: new google.maps.LatLng(locations[i].latitude, locations[i].longitude),
            map: map
          });

          google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
              infowindow.setContent(locations[i].address);
              infowindow.open(map, marker);
            }
          })(marker, i));
      }
      }

      function calcDistance (fromLat,fromLng,toLat, toLng) {        
        return google.maps.geometry.spherical.computeDistanceBetween(
                  new google.maps.LatLng(fromLat, fromLng), new google.maps.LatLng(toLat, toLng));
     }   

     function getDataForLocation(urlData) {
      
      var dataDistance =  [];
      var jsoDataUrl = JSON.parse(urlData)
      var arraydata =[];
      for(let i=0;i<jsoDataUrl.length;i++){
        dataDistance[i] = [ jsoDataUrl[i].address,jsoDataUrl[i].latitude,   jsoDataUrl[i].longitude,     (i+1)]         
        arraydata[i]= {
          address :jsoDataUrl[i].address,
          latitude : jsoDataUrl[i].latitude,   longitude: jsoDataUrl[i].longitude,
          distance :calcDistance(37.7425503735592, -122.492677082215,jsoDataUrl[i].latitude,   jsoDataUrl[i].longitude)};

      }

      arraydata.sort(function (a, b) {
       return parseFloat(a.distance) - parseFloat(b.distance);
      });

     var arraysort = arraydata.slice(1,9);
      
      getGoogleMap(arraysort)
     }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAg3G1U67issYWPUgSCOvSQB9b_-WT_EcY&libraries=geometry,places&callback=initMap"     async defer></script>
  </body>
</html>






